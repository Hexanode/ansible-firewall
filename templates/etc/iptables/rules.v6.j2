#jinja2: trim_blocks: True, lstrip_blocks: True
# Generated by Ansible Firewall Role - DO NOT EDIT

# NAT TABLE
*nat
:PREROUTING ACCEPT [0:0]
:INPUT ACCEPT [0:0]
:OUTPUT ACCEPT [0:0]
:POSTROUTING ACCEPT [0:0]

## CUSTOM RULES

### Forwarded ports
{% for forwarded_port in firewall_forwarded_tcp_ports %}
-A PREROUTING -p tcp --dport {{ forwarded_port.src }} -j REDIRECT --to-port {{ forwarded_port.dest }}
-A OUTPUT -p tcp -o lo --dport {{ forwarded_port.src }} -j REDIRECT --to-port {{ forwarded_port.dest }}
{% endfor -%}
{% for forwarded_port in firewall_forwarded_udp_ports %}
-A PREROUTING -p udp --dport {{ forwarded_port.src }} -j REDIRECT --to-port {{ forwarded_port.dest }}
-A OUTPUT -p udp -o lo --dport {{ forwarded_port.src }} -j REDIRECT --to-port {{ forwarded_port.dest }}
{% endfor %}

### Additional custom rules
{% for rule in firewall_ipv6_additional_nat_rules -%}
    {{ rule }}
{% endfor %}

COMMIT

# FILTER TABLE
*filter
:INPUT {{ 'ACCEPT' if firewall_input_policy_accept else 'DROP' }} [0:0]
:FORWARD {{ 'ACCEPT' if firewall_forward_policy_accept else 'DROP' }} [0:0]
:OUTPUT {{ 'ACCEPT' if firewall_output_policy_accept else 'DROP' }} [0:0]
:LOG_CHAIN - [0:0]
:LOG_CHAIN_OUT - [0:0]

## BEGIN RULES

### Accept traffic from loopback interface
-A INPUT -i lo -m comment --comment "00000 INPUT ALL ACCEPT lo" -j ACCEPT

### Accept related, established traffic
-A INPUT -m comment --comment "00001 INPUT ALL RELATED,ESTABLISHED ACCEPT" -m state --state RELATED,ESTABLISHED -j ACCEPT

{% if firewall_allow_icmp %}
### Allow icmp requests
-A INPUT -p icmp -m comment --comment "00002 INPUT ICMP ACCEPT" -j ACCEPT
{% endif %}

## ROLES RULES

{% for role_rules in enabled_role_rules_list %}
    {%- if hostvars[inventory_hostname][role_rules] is defined -%}
        ### {{ role_rules | replace('_firewall_rules','') | upper }}
        {% for rule in hostvars[inventory_hostname][role_rules] -%}
            {% if ( ( rule.dest_ip is not defined or rule.dest_ip == 'any' ) and
                  ( rule.src_ip is not defined or rule.src_ip == 'any' ) ) or
                  ( rule.ip is defined and rule.ip == '6' ) -%}
                    -A INPUT
                {%- if rule.proto is not defined %} -p tcp -m tcp {%- else %} -p {{ rule.proto }} -m {{ rule.proto }} {%- endif %}
                {%- if rule.src_ip is defined and rule.src_ip != 'any' %} --source {{ rule.src_ip }} {%- endif %}
                {%- if rule.src_port is defined and rule.src_port != 'any' %} --sport {{ rule.src_port }} {%- endif %}
                {%- if rule.dest_ip is defined and rule.dest_ip != 'any' %} --destination {{ rule.dest_ip }} {%- endif %}
                {%- if rule.dest_port is defined and rule.dest_port != 'any' %} --dport {{ rule.dest_port }} {%- endif %}
                {%- if rule.policy is not defined %} -j ACCEPT {% else %} -j {{ rule.policy }} {%- endif %}

            {% endif %}
        {% endfor %}
    {% endif %}
{% endfor %}

## CUSTOM RULES

### Open ports from any
{% for port in firewall_allowed_tcp_ports -%}
    -A INPUT -p tcp -m tcp --dport {{ port }} -j ACCEPT
{% endfor %}
{% for port in firewall_allowed_udp_ports -%}
    -A INPUT -p udp -m udp --dport {{ port }} -j ACCEPT
{% endfor %}

### Additional custom rules
{% for rule in firewall_ipv6_additional_rules -%}
    {{ rule }}
{% endfor %}

## END RULES

{% if firewall_log_dropped_packets %}
-A INPUT -m comment --comment "99998 INPUT ALL LOG_CHAIN" -j LOG_CHAIN
{% endif %}
-A INPUT -m comment --comment "99999 INPUT ALL {{ 'DROP' if firewall_drop_instead_of_reject else 'REJECT' }}" -j {{ 'DROP' if firewall_drop_instead_of_reject else 'REJECT' }}

## DROP RULES

{% if firewall_log_dropped_packets %}
### LOG DROP INPUT
-A LOG_CHAIN -m limit --limit 10/minute -m comment --comment "00000 LOG_CHAIN ALL LOG" -j LOG --log-prefix "[IPT LOG]: "
-A LOG_CHAIN -m limit --limit 10/minute -m comment --comment "00001 LOG_CHAIN ALL {{ 'DROP' if firewall_drop_instead_of_reject else 'REJECT' }}" -j {{ 'DROP' if firewall_drop_instead_of_reject else 'REJECT' }}

### LOG DROP OUTPUT
-A LOG_CHAIN_OUT -m limit --limit 10/minute -m comment --comment "00000 LOG_CHAIN_OUT ALL LOG" -j LOG --log-prefix "[IPT LOG OUT]: "
-A LOG_CHAIN_OUT -m limit --limit 10/minute -m comment --comment "00001 LOG_CHAIN_OUT ALL {{ 'DROP' if firewall_drop_instead_of_reject else 'REJECT' }}" -j {{ 'DROP' if firewall_drop_instead_of_reject else 'REJECT' }}
{% endif %}

COMMIT

# Completed
